{
    "author": "Lukas Reiter", 
    "plugins": [
        0, 
        6, 
        7
    ], 
    "burp_professional_only": false, 
    "uuid": "21c8632e-2213-4450-8198-9f3bd657771f", 
    "version": "v1.1", 
    "script": "\"\"\"\nThis script scans all in-scope HTTP responses for known software versions and adds\nidentified software information to the table above.\n\nNote that the extraction is based on the following regular expressions:\nhttps://vulners.com/api/v3/burp/rules\n\"\"\"\n\n# Do the initial setup\nif ref == 1 or \"attributes\" not in session:\n\tsession[\"attributes\"] = [\"software\", \"version\", \"type\", \"alias\", \"cpe\"]\n\theader = [\"Ref.\", \"Host\", \"Path\"]\n\theader.extend(session[\"attributes\"])\n\n# Process only in-scope HTTP responses\nresponse = message_info.getResponse()\nif in_scope and response:\n\tresponse_string = helpers.bytesToString(response).encode(\"utf-8\")\n\tresults = find_versions(response_string)\n\tfor item in results:\n\t\trow=[]\r\n\t\tif has_stopped():\r\n\t\t\tbreak\n\t\tfor attribute in session[\"attributes\"]:\n\t\t\trow.append(item[attribute] if item[attribute] else \"\")\n\t\ttmp = [ref, get_hostname(url), url.getPath()]\n\t\ttmp.extend(row)\n\t\trows.append(tmp)", 
    "name": "Misc - Template Script to Scan Project for Known Software Versions"
}