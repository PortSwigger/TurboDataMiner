{
    "author": "Lukas Reiter", 
    "plugins": [
        0, 
        6, 
        7
    ], 
    "burp_professional_only": false, 
    "uuid": "26d5dd1a-401e-4e37-a6c1-ae4fde640c3a", 
    "version": "v1.1", 
    "script": "\"\"\"\nThis script shall aid in the fast identification of parameters that are potentially prone to \nobject ID enumeration vulnerabilities by identifying those parameters that just transport \ninteger values and adding them to the table above.\n\"\"\"\nfrom burp import IParameter\n\n# Do the initial setup\nif ref == 1 or \"types\" not in session:\n\tsession[\"types\"] = [IParameter.PARAM_URL,\n\t\t\t\t\t\t\t\t\t\t\tIParameter.PARAM_BODY, \n\t\t\t\t\t\t\t\t\t\t\tIParameter.PARAM_COOKIE, \n\t\t\t\t\t\t\t\t\t\t\tIParameter.PARAM_XML, \n\t\t\t\t\t\t\t\t\t\t\tIParameter.PARAM_XML_ATTR, \n\t\t\t\t\t\t\t\t\t\t\tIParameter.PARAM_MULTIPART_ATTR, \n\t\t\t\t\t\t\t\t\t\t\tIParameter.PARAM_JSON]\n\theader = [\"Ref.\", \"Host\", \"URL\", \"Type\", \"Parameter\", \"Value\"]\n\n# Process only in-scope HTTP requests\nif in_scope:\n\trequest = message_info.getRequest()\n\trequest_info = helpers.analyzeRequest(request)\n\tfor parameter in request_info.getParameters():\n\t\tvalue = parameter.getValue()\n\t\ttype = parameter.getType()\r\n\t\tif has_stopped():\r\n\t\t\tbreak\n\t\telif value.isnumeric() and type in session[\"types\"]:\n\t\t\trows.append([ref, get_hostname(url), url.getPath(), get_parameter_name(type), parameter.getName(), value])", 
    "name": "Parameter - Template Script to Identify Parameters With Potential Object ID Enumeration"
}