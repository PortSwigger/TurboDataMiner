{
    "author": "Lukas Reiter", 
    "plugins": [
        0, 
        6, 
        7
    ], 
    "burp_professional_only": false, 
    "uuid": "b61fc205-cf03-48d7-820a-75f2cbf12530", 
    "version": "v1.1", 
    "script": "\"\"\"\r\nThis script displays information about redirects in the table above.\r\n\r\nUse this script to identify potential redirects that for example leak information.\r\n\"\"\"\r\nfrom burp import IParameter\r\n\r\n# Do the initial setup\r\nif ref ==1 or \"exclude_parameters\" not in session:\r\n\theader = [\"Ref.\", \"Host\", \"URL\", \"Params\", \"Location Params\", \"Status Code\", \"Content Length\", \"Response Size\", \"Location\"]\r\n\tsession[\"exclude_parameters\"] = [IParameter.PARAM_COOKIE]\r\n\r\n# Process only in-scope HTTP responses\r\nresponse = message_info.getResponse()\r\nif in_scope and response:\r\n\tresponse_info = helpers.analyzeResponse(response)\r\n\tstatus_code = response_info.getStatusCode()\r\n\tparameters = [item for item in request_info.getParameters() if item.getType() not in session[\"exclude_parameters\"]]\r\n\tcontent_length = get_content_length(response_info.getHeaders())\r\n\t_, location = get_header(response_info.getHeaders(), \"Location\")\r\n\tif location:\r\n\t\tlocation_params = []\r\n\t\tfor parameter in parameters:\r\n\t\t\traw_paramter = helpers.urlDecode(parameter.getValue())\r\n\t\t\traw_location = helpers.urlDecode(location)\r\n\t\t\tif has_stopped():\r\n\t\t\t\tbreak\r\n\t\t\telif raw_paramter in raw_location:\r\n\t\t\t\tlocation_params.append(parameter.getName())\r\n\t\trows.append([ref, get_hostname(url), url.getPath(), len(parameters) > 0, \", \".join(location_params), status_code, content_length if content_length else -1, len(response), location])", 
    "name": "Redirect - Template Script to Analyze Redirects"
}